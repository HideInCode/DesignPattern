/**
 * 使用场景:业务频繁变化,类似结构重复出现,很容易把这些变化变成语法规则(简单的)
 * 构建语法树，定义终结符与非终结符。
 * 构建环境类，包含解释器之外的一些全局信息，一般是 HashMap。
 * 应用实例：编译器、运算表达式计算。
 * 可利用场景比较少，JAVA 中如果碰到可以用 expression4J 代替。
 */
public class Interpreter {
}
